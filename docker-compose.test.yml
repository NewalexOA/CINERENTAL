version: '3.8'

name: act-rental-test

services:
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    entrypoint: ./docker/run-tests.sh
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - ./alembic:/app/alembic
      - ./docker:/app/docker
      - ./media:/app/media
      - ./static:/app/static
      - ./templates:/app/templates
      - ./alembic.ini:/app/alembic.ini
      - ./pyproject.toml:/app/pyproject.toml
      - ./htmlcov:/app/htmlcov
    environment:
      - POSTGRES_SERVER=test-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_db
      - REDIS_HOST=test-redis
      - REDIS_PASSWORD=
      - TESTING=1
      - SECRET_KEY=test-secret-key
      - ENVIRONMENT=test
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - test-db
      - test-redis
    networks:
      - act-rental_network
    command: >
      bash -c "
        ./docker/wait-for.sh test-db:5432 -t 60 -- echo 'Waiting for PostgreSQL...' &&
        ./docker/wait-for.sh test-redis:6380 -t 60 -- echo 'Waiting for Redis...' &&
        echo 'Running migrations...' &&
        alembic stamp head &&
        echo 'Running tests...' &&
        pytest ${TEST_PATH:-tests/} -v
      "

  test-db:
    image: postgres:15
    tmpfs:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_db
    ports:
      - "5433:5432"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - act-rental_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-redis:
    image: redis:7
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  act-rental_network:
    driver: bridge
