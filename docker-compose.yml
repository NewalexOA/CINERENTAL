name: cinerental

services:
  web:
    build: .
    command: ./docker/start.sh
    volumes:
      - .:/app
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-cinerental}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key}
      - DEBUG=${DEBUG:-false}
      - WORKERS_COUNT=${WORKERS_COUNT:-1}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cinerental_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  test:
    build: .
    entrypoint: ./docker/run-tests.sh
    volumes:
      - .:/app
      - ./htmlcov:/app/htmlcov
    environment:
      - POSTGRES_SERVER=test_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cinerental_test
      - REDIS_HOST=redis
      - REDIS_PASSWORD=
      - TESTING=1
      - SECRET_KEY=test-secret-key
    depends_on:
      test_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cinerental_network

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=cinerental
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - cinerental_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:14
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=cinerental_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    networks:
      - cinerental_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cinerental_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
  media_volume:

networks:
  cinerental_network:
    driver: bridge
