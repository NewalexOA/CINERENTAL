name: Run Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests in Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Prepare directories
        run: |
          # Ensure frontend/static exists
          mkdir -p frontend/static
          chmod -R 777 frontend

      - name: Build and start containers
        run: |
          docker compose -f docker-compose.test.yml build
          docker compose -f docker-compose.test.yml up -d test-db test-redis

          # Wait for services to be healthy
          echo "Waiting for services to be healthy..."
          attempt_counter=0
          max_attempts=30

          until docker compose -f docker-compose.test.yml ps | grep "test-db" | grep -q "(healthy)" && \
                docker compose -f docker-compose.test.yml ps | grep "test-redis" | grep -q "(healthy)"; do
            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Max attempts reached. Services are not healthy!"
              docker compose -f docker-compose.test.yml ps
              docker compose -f docker-compose.test.yml logs
              exit 1
            fi

            attempt_counter=$((attempt_counter+1))
            echo "Waiting for services to be healthy... (attempt: ${attempt_counter}/${max_attempts})"
            sleep 1
          done
          echo "All services are healthy!"

      - name: Create required directories
        run: |
          mkdir -p $(pwd)/coverage/htmlcov
          mkdir -p $(pwd)/frontend/static $(pwd)/media $(pwd)/static $(pwd)/templates $(pwd)/alembic
          chmod -R 777 $(pwd)/coverage $(pwd)/frontend $(pwd)/media $(pwd)/static $(pwd)/templates $(pwd)/alembic

      - name: Run tests
        run: |
          # Run all tests with coverage
          docker compose -f docker-compose.test.yml run --rm \
            -v $(pwd)/coverage:/app/coverage \
            -e ENVIRONMENT=testing \
            test bash -c "
              echo 'Running unit tests...' && \
              pytest tests/unit/ -v --cov=backend --cov-report=html:/app/coverage/htmlcov/unit || exit 1 && \
              echo 'Running integration tests...' && \
              pytest tests/integration/ -v --cov=backend --cov-report=html:/app/coverage/htmlcov/integration || exit 1 && \
              echo 'Running e2e tests...' && \
              pytest tests/e2e/ -v --cov=backend --cov-report=html:/app/coverage/htmlcov/e2e || exit 1
            "

      - name: Upload coverage report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/htmlcov
          retention-days: 7
          if-no-files-found: warn

      - name: Stop containers
        if: always()
        run: |
          echo "Stopping all containers..."
          docker compose -f docker-compose.test.yml down -v
