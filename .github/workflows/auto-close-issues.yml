name: Auto Close Issues on Develop

on:
  push:
    branches: [ develop ]

jobs:
  auto-close-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Auto close issues
        uses: actions/github-script@v7
        with:
          script: |
            // Get commit messages from the push
            const commits = context.payload.commits || [];

            for (const commit of commits) {
              const message = commit.message;
              console.log(`Checking commit: ${message}`);

              // Look for issue closing keywords
              const closeKeywords = /(?:clos(?:e[sd]?)|fix(?:e[sd])?|resolv(?:e[sd])?)\s+#(\d+)/gi;
              let match;

              while ((match = closeKeywords.exec(message)) !== null) {
                const issueNumber = parseInt(match[1]);
                console.log(`Found issue reference: #${issueNumber}`);

                try {
                  // Check if issue exists and is open
                  const issue = await github.rest.issues.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issueNumber
                  });

                  if (issue.data.state === 'open') {
                    // Close the issue
                    await github.rest.issues.update({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issueNumber,
                      state: 'closed'
                    });

                    // Add a comment explaining the closure
                    await github.rest.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: issueNumber,
                      body: `Automatically closed by commit ${commit.id} in develop branch.\n\nCommit message: ${commit.message}`
                    });

                    console.log(`Successfully closed issue #${issueNumber}`);
                  } else {
                    console.log(`Issue #${issueNumber} is already ${issue.data.state}`);
                  }
                } catch (error) {
                  if (error.status === 404) {
                    console.log(`Issue #${issueNumber} not found`);
                  } else {
                    console.error(`Failed to process issue #${issueNumber}:`, error);
                  }
                }
              }
            }
